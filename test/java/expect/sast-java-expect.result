======================== Findings ========================

------------- 1: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/JDBCUtil.java
Line 18: statement.executeQuery(sql)
SINK RULE:executeQuery
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/other_preference/MayTaintKind_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/other_preference/MayTaintKind_001_T.java
  AffectedNodeName: name
  23:  SOURCE:      public void testcase(@RequestParam String name, @RequestParam Integer condition) {
 /src/main/java/com/sast/astbenchmark/other_preference/MayTaintKind_001_T.java
  AffectedNodeName: sql
  26:  Var Pass:             sql = "select * from user where username = " + name;
 /src/main/java/com/sast/astbenchmark/other_preference/MayTaintKind_001_T.java
  AffectedNodeName: execSql
  31:  CALL:          JDBCUtil.execSql(sql);
 /src/main/java/com/sast/astbenchmark/common/utils/JDBCUtil.java
  AffectedNodeName: sql
  13:  ARG PASS:      public static void execSql(String sql) {
 /src/main/java/com/sast/astbenchmark/common/utils/JDBCUtil.java
  AffectedNodeName: statement.executeQuery
  18:  SINK:              statement.executeQuery(sql);

------------- 2: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/JDBCUtil.java
Line 18: statement.executeQuery(sql)
SINK RULE:executeQuery
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/other_preference/MustTaintKind_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/other_preference/MustTaintKind_001_T.java
  AffectedNodeName: name
  23:  SOURCE:      public void testcase(@RequestParam String name) {
 /src/main/java/com/sast/astbenchmark/other_preference/MustTaintKind_001_T.java
  AffectedNodeName: sql
  24:  Var Pass:          String sql = "select * from user where username = " + name;
 /src/main/java/com/sast/astbenchmark/other_preference/MustTaintKind_001_T.java
  AffectedNodeName: execSql
  25:  CALL:          JDBCUtil.execSql(sql);
 /src/main/java/com/sast/astbenchmark/common/utils/JDBCUtil.java
  AffectedNodeName: sql
  13:  ARG PASS:      public static void execSql(String sql) {
 /src/main/java/com/sast/astbenchmark/common/utils/JDBCUtil.java
  AffectedNodeName: statement.executeQuery
  18:  SINK:              statement.executeQuery(sql);

------------- 3: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_002_T.java
Line 34: Runtime.getRuntime().exec(b2.attr.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_002_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_002_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_002_T.java
  AffectedNodeName: [[b1.attr].b]
  30:  Var Pass:         b1.attr.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_002_T.java
  AffectedNodeName: doUnalias
  31:  CALL:          Invoke.doUnalias(b1);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: b
  50:  ARG PASS:      public static void doUnalias(B b) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: setAttr
  51:  CALL:          b.setAttr(new A());
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: b
  51:  ARG PASS:          b.setAttr(new A());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_002_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  34:  SINK:              Runtime.getRuntime().exec(b2.attr.b);

------------- 4: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_003_T.java
Line 36: Runtime.getRuntime().exec(b1.attr.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_003_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_003_T.java
  AffectedNodeName: [[b1.attr].b]
  30:  Var Pass:         b1.attr.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_003_T.java
  AffectedNodeName: alias
  32:  CALL:          Invoke.alias(b1, b2);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: b1
  42:  ARG PASS:      public static void alias(B b1, B b2) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: setAttr
  43:  CALL:          b2.setAttr(b1.attr);
 /src/main/java/com/sast/astbenchmark/model/alias/B.java
  AffectedNodeName: attr
  10:  ARG PASS:      public void setAttr(A attr) {
 /src/main/java/com/sast/astbenchmark/model/alias/B.java
  AffectedNodeName: [this.attr]
  11:  Var Pass:         this.attr = attr;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_003_T.java
  AffectedNodeName: doUnalias
  33:  CALL:          Invoke.doUnalias(b2);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: b
  50:  ARG PASS:      public static void doUnalias(B b) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: setAttr
  51:  CALL:          b.setAttr(new A());
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: b
  51:  ARG PASS:          b.setAttr(new A());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/FieldUnAlias_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  36:  SINK:              Runtime.getRuntime().exec(b1.attr.b);

------------- 5: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_001_T.java
Line 31: Runtime.getRuntime().exec(a1.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_001_T.java
  AffectedNodeName: [a1.b]
  28:  Var Pass:             a1.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(a1.b);

------------- 6: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_003_T.java
Line 30: Runtime.getRuntime().exec(a1.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_003_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_003_T.java
  AffectedNodeName: [a1.b]
  28:  Var Pass:             a1.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapOverwriteAlias_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(a1.b);

------------- 7: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapPointsToSelfAlias_001_T.java
Line 39: Runtime.getRuntime().exec(l1.data)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapPointsToSelfAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapPointsToSelfAlias_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapPointsToSelfAlias_001_T.java
  AffectedNodeName: [cycle.data]
  38:  Var Pass:             cycle.data = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/HeapPointsToSelfAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  39:  SINK:              Runtime.getRuntime().exec(l1.data);

------------- 8: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
Line 35: Runtime.getRuntime().exec(s)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
  AffectedNodeName: set
  32:  CALL:              a.obj.set(cmd);
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1.java
  AffectedNodeName: v
  8:   ARG PASS:          public void set(String v) {
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1.java
  AffectedNodeName: data
  9:   Var Pass:             data = v;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
  AffectedNodeName: get
  33:  CALL:              String s = a.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
  AffectedNodeName: a
  33:  ARG PASS:              String s = a.get(); // tainted
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1.java
  AffectedNodeName: [return value]
  16:  Return Value:          return obj.data;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
  AffectedNodeName: get
  33:  CALL RETURN:             String s = a.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
  AffectedNodeName: s
  33:  Var Pass:              String s = a.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  35:  SINK:              Runtime.getRuntime().exec(s);

------------- 9: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
Line 35: Runtime.getRuntime().exec(s)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
  AffectedNodeName: set
  32:  CALL:              a.obj.set(cmd);
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1b.java
  AffectedNodeName: v
  8:   ARG PASS:          public void set(String v) {
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1b.java
  AffectedNodeName: [obj.data]
  9:   Var Pass:             obj.data = v;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
  AffectedNodeName: get
  33:  CALL:              String s = a.obj.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
  33:  ARG PASS:              String s = a.obj.get(); // tainted
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1b.java
  AffectedNodeName: [return value]
  13:  Return Value:              return obj.data;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
  AffectedNodeName: get
  33:  CALL RETURN:             String s = a.obj.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
  AffectedNodeName: s
  33:  Var Pass:              String s = a.obj.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_005_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  35:  SINK:              Runtime.getRuntime().exec(s);

------------- 10: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_006_T.java
Line 35: Runtime.getRuntime().exec(s)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_006_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_006_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_006_T.java
  AffectedNodeName: set
  32:  CALL:              a.obj.set(cmd);
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1b.java
  AffectedNodeName: v
  8:   ARG PASS:          public void set(String v) {
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1b.java
  AffectedNodeName: [obj.data]
  9:   Var Pass:             obj.data = v;
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1b.java
  AffectedNodeName: [return value]
  13:  Return Value:              return obj.data;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_006_T.java
  AffectedNodeName: get
  33:  CALL RETURN:             String s = b.obj.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_006_T.java
  AffectedNodeName: s
  33:  Var Pass:              String s = b.obj.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_006_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  35:  SINK:              Runtime.getRuntime().exec(s);

------------- 11: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
Line 35: Runtime.getRuntime().exec(s)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
  AffectedNodeName: set
  32:  CALL:              a.obj2.foo.set(cmd);
 /src/main/java/com/sast/astbenchmark/model/alias/Inner3.java
  AffectedNodeName: p
  15:  ARG PASS:          public void set(String p) {
 /src/main/java/com/sast/astbenchmark/model/alias/Inner3.java
  AffectedNodeName: data
  16:  Var Pass:             data = p;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
  AffectedNodeName: get
  33:  CALL:              String s = b.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
  AffectedNodeName: b
  33:  ARG PASS:              String s = b.get(); // tainted
 /src/main/java/com/sast/astbenchmark/model/alias/Inner3.java
  AffectedNodeName: [return value]
  24:  Return Value:          return data;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
  AffectedNodeName: get
  33:  CALL RETURN:             String s = b.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
  AffectedNodeName: s
  33:  Var Pass:              String s = b.get(); // tainted
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_007_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  35:  SINK:              Runtime.getRuntime().exec(s);

------------- 12: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_009_T.java
Line 36: Runtime.getRuntime().exec(inner.getParent())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_009_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_009_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_009_T.java
  AffectedNodeName: [a.parentData]
  28:  Var Pass:             a.parentData = cmd;
 /src/main/java/com/sast/astbenchmark/model/alias/Inner1b.java
  AffectedNodeName: [return value]
  17:  Return Value:              return parentData;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_009_T.java
  AffectedNodeName: getParent
  36:  CALL RETURN:             Runtime.getRuntime().exec(inner.getParent());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/InnerClassAlias_009_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  36:  SINK:              Runtime.getRuntime().exec(inner.getParent());

------------- 13: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/NullAlias_001_T.java
Line 39: Runtime.getRuntime().exec(dc3.next.data)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/NullAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/NullAlias_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/NullAlias_001_T.java
  AffectedNodeName: a
  35:  Var Pass:              String a = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/NullAlias_001_T.java
  AffectedNodeName: [dc.data]
  36:  Var Pass:             dc.data = a;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/NullAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  39:  SINK:              Runtime.getRuntime().exec(dc3.next.data);

------------- 14: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_001_T.java
Line 32: Runtime.getRuntime().exec(cat /some/path/+b.attr.i+.png)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_001_T.java
  AffectedNodeName: id
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam int id) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_001_T.java
  AffectedNodeName: id
  27:  Var Pass:             id = id + 100;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_001_T.java
  AffectedNodeName: [a.i]
  31:  Var Pass:             a.i = id;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec("cat /some/path/" + b.attr.i + ".png");

------------- 15: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_003_T.java
Line 30: Runtime.getRuntime().exec(cat /some/path/+i.intData+.png)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_003_T.java
  AffectedNodeName: id
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam int id) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_003_T.java
  AffectedNodeName: id
  26:  Var Pass:             id = id + 99;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_003_T.java
  AffectedNodeName: setIntData
  29:  CALL:              b.setIntData(id);
 /src/main/java/com/sast/astbenchmark/model/alias/PrimitiveData.java
  AffectedNodeName: p
  6:   ARG PASS:      public void setIntData(int p) {
 /src/main/java/com/sast/astbenchmark/model/alias/PrimitiveData.java
  AffectedNodeName: [this.intData]
  7:   Var Pass:         this.intData = p;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/PrimitiveFieldAccess_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec("cat /some/path/" + i.intData + ".png");

------------- 16: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_001_T.java
Line 34: Runtime.getRuntime().exec(a.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_001_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_001_T.java
  AffectedNodeName: tainted
  28:  Var Pass:              String tainted = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_001_T.java
  AffectedNodeName: [[b.attr].b]
  32:  Var Pass:             b.attr.b = tainted;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  34:  SINK:              Runtime.getRuntime().exec(a.b);

------------- 17: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_003_T.java
Line 34: Runtime.getRuntime().exec(e.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_003_T.java
  AffectedNodeName: [a.b]
  32:  Var Pass:             a.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/ReturnAlias_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  34:  SINK:              Runtime.getRuntime().exec(e.b);

------------- 18: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java
Line 37: Runtime.getRuntime().exec(s)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java
  AffectedNodeName: [a.b]
  32:  Var Pass:             a.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java
  AffectedNodeName: bar
  35:  CALL:              String s = sa.bar(a).b;
 /src/main/java/com/sast/astbenchmark/model/alias/SimpleAlias.java
  AffectedNodeName: a
  12:  ARG PASS:      public A bar(A a) {
 /src/main/java/com/sast/astbenchmark/model/alias/SimpleAlias.java
  AffectedNodeName: [[this.b1].attr]
  13:  Var Pass:         this.b1.attr = a;
 /src/main/java/com/sast/astbenchmark/model/alias/SimpleAlias.java
  AffectedNodeName: [return value]
  14:  Return Value:          return this.b2.attr;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java
  AffectedNodeName: bar
  35:  CALL RETURN:             String s = sa.bar(a).b;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java
  AffectedNodeName: s
  35:  Var Pass:              String s = sa.bar(a).b;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SameArgumentAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  37:  SINK:              Runtime.getRuntime().exec(s);

------------- 19: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SingleFieldAccessAlias_001_T.java
Line 32: Runtime.getRuntime().exec(b.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SingleFieldAccessAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SingleFieldAccessAlias_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SingleFieldAccessAlias_001_T.java
  AffectedNodeName: [a.b]
  30:  Var Pass:             a.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/SingleFieldAccessAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(b.b);

------------- 20: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/StaticFieldAlias_001_T.java
Line 32: Runtime.getRuntime().exec(StaticData.staticB1.attr.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/StaticFieldAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/StaticFieldAlias_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/StaticFieldAlias_001_T.java
  AffectedNodeName: [[[StaticData.staticB2].attr].b]
  30:  Var Pass:             StaticData.staticB2.attr.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/alias/StaticFieldAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(StaticData.staticB1.attr.b);

------------- 21: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_001_T.java
Line 32: Runtime.getRuntime().exec(myTree.left.right.left.left.right.left.data)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_001_T.java
  AffectedNodeName: [myTree.data]
  31:  Var Pass:             myTree.data = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(myTree.left.right.left.left.right.left.data);

------------- 22: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_003_T.java
Line 32: Runtime.getRuntime().exec(last.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_003_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_003_T.java
  AffectedNodeName: [a.b]
  30:  Var Pass:             a.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_003_T.java
  AffectedNodeName: last
  31:  Var Pass:              A last = list.next.next.next.next.next.next.data;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/AccessPathChainAlias_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(last.b);

------------- 23: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
Line 29: Runtime.getRuntime().exec(simpleBean.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: setCmd
  27:  CALL:              simpleBean.setCmd(cmd);
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: cmd
  8:   ARG PASS:      public void setCmd(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: [this.cmd1]
  9:   Var Pass:         this.cmd1 = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: setCmd2
  28:  CALL:              simpleBean.setCmd2("cd /");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: simpleBean
  28:  ARG PASS:              simpleBean.setCmd2("cd /");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: getCmd
  29:  CALL:              Runtime.getRuntime().exec(simpleBean.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: simpleBean
  29:  ARG PASS:              Runtime.getRuntime().exec(simpleBean.getCmd());
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: [return value]
  17:  Return Value:          return cmd1;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: getCmd
  29:  CALL RETURN:             Runtime.getRuntime().exec(simpleBean.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_interface_class/PropertyIsTaintOrNot_Object_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(simpleBean.getCmd());

------------- 24: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/Array_index_muilt_collection_001_T.java
Line 26: Runtime.getRuntime().exec(arr.0.0)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/Array_index_muilt_collection_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/Array_index_muilt_collection_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/Array_index_muilt_collection_001_T.java
  AffectedNodeName: arr
  25:  Var Pass:              String[][] arr = new String[][] {{cmd}, {"xx", "aa"}, {"bar", "b", "cc"}};
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/Array_index_muilt_collection_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              Runtime.getRuntime().exec(arr[0][0]);

------------- 25: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
Line 44: httpclient.execute(httpGet)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java
  AffectedNodeName: url
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java
  AffectedNodeName: put
  31:  CALL:              paramMap.put("url1", url);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java
  AffectedNodeName: setModelMap
  34:  CALL:              xCmdObject.setModelMap(paramMap);
 /src/main/java/com/sast/astbenchmark/model/XCmdObject.java
  AffectedNodeName: map
  13:  ARG PASS:      public void setModelMap(Map<String, String> map) {
 /src/main/java/com/sast/astbenchmark/model/XCmdObject.java
  AffectedNodeName: [this.modelMap]
  14:  Var Pass:         this.modelMap = map;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java
  AffectedNodeName: getModelMap
  35:  CALL:              HttpUtil.doGet(xCmdObject.getModelMap().get("url1"));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java
  AffectedNodeName: xCmdObject
  35:  ARG PASS:              HttpUtil.doGet(xCmdObject.getModelMap().get("url1"));
 /src/main/java/com/sast/astbenchmark/model/XCmdObject.java
  AffectedNodeName: [return value]
  22:  Return Value:          return modelMap;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java
  AffectedNodeName: getModelMap
  35:  CALL RETURN:             HttpUtil.doGet(xCmdObject.getModelMap().get("url1"));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_muilt_collection/MapPutGet_muilt_collection_001_T.java
  AffectedNodeName: doGet
  35:  CALL:              HttpUtil.doGet(xCmdObject.getModelMap().get("url1"));
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  64:  ARG PASS:      public static String doGet(String url) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: doGet
  65:  CALL:          return doGet(url, null);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  22:  ARG PASS:      public static String doGet(String url, Map<String, String> param) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: builder
  31:  Var Pass:              URIBuilder builder = new URIBuilder(url);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: uri
  37:  Var Pass:              URI uri = builder.build();
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpGet
  40:  Var Pass:              HttpGet httpGet = new HttpGet(uri);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpclient.execute
  44:  SINK:              response = httpclient.execute(httpGet);

------------- 26: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_001_T.java
Line 30: Runtime.getRuntime().exec(c.1)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_001_T.java
  AffectedNodeName: a[1]
  27:  Var Pass:             a[1] = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_001_T.java
  AffectedNodeName: c
  28:  Var Pass:              String[] c = b;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(c[1]);

------------- 27: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_003_T.java
Line 32: Runtime.getRuntime().exec(c.get(0))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_003_T.java
  AffectedNodeName: add
  29:  CALL:              a.add(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_003_T.java
  AffectedNodeName: c
  30:  Var Pass:              List<String> c = b;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ArrayElementOverwrite_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(c.get(0));

------------- 28: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_001_T.java
Line 28: SinkUtil.sink(m)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_001_T.java
  AffectedNodeName: put
  27:  CALL:              m.put("key1", cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_001_T.java
  AffectedNodeName: SinkUtil.sink
  28:  SINK:              SinkUtil.sink(m);

------------- 29: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_003_T.java
Line 29: SinkUtil.sink(m)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_003_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_003_T.java
  AffectedNodeName: replace
  28:  CALL:              m.replace("key1", cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_003_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:              SinkUtil.sink(m);

------------- 30: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_005_T.java
Line 30: SinkUtil.sink(m)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_005_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_005_T.java
  AffectedNodeName: put
  27:  CALL:              m.put("key1", cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/Map_obj_sensitive_005_T.java
  AffectedNodeName: SinkUtil.sink
  30:  SINK:              SinkUtil.sink(m);

------------- 31: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java
Line 30: Runtime.getRuntime().exec(a.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java
  AffectedNodeName: setCmd
  28:  CALL:              a.setCmd(cmd);
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: cmd
  8:   ARG PASS:      public void setCmd(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: [this.cmd1]
  9:   Var Pass:         this.cmd1 = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java
  AffectedNodeName: getCmd
  30:  CALL:              Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java
  AffectedNodeName: a
  30:  ARG PASS:              Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: [return value]
  17:  Return Value:          return cmd1;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java
  AffectedNodeName: getCmd
  30:  CALL RETURN:             Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/object_sensitive/ObjectDiffAttribute_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(a.getCmd());

------------- 32: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
Line 44: httpclient.execute(httpGet)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/CallExpression_Package_001_T.java","functionName":"aTaintCase0157","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/CallExpression_Package_001_T.java
  AffectedNodeName: url
  22:  SOURCE:      public Map<String, Object> aTaintCase0157(@PathVariable String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/CallExpression_Package_001_T.java
  AffectedNodeName: doGet
  26:  CALL:              String result = com.sast.astbenchmark.common.utils.HttpUtil.doGet(url);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  64:  ARG PASS:      public static String doGet(String url) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: doGet
  65:  CALL:          return doGet(url, null);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  22:  ARG PASS:      public static String doGet(String url, Map<String, String> param) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: builder
  31:  Var Pass:              URIBuilder builder = new URIBuilder(url);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: uri
  37:  Var Pass:              URI uri = builder.build();
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpGet
  40:  Var Pass:              HttpGet httpGet = new HttpGet(uri);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpclient.execute
  44:  SINK:              response = httpclient.execute(httpGet);

------------- 33: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
Line 27: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
  AffectedNodeName: chooseOne
  26:  CALL:              String a = Invoke.chooseOne(3, "a", "b", "c", cmd, "e");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
  AffectedNodeName: params
  36:  ARG PASS:          private static String chooseOne(int i, String... params) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
  AffectedNodeName: [return value]
  37:  Return Value:              return params[i];
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
  AffectedNodeName: chooseOne
  26:  CALL RETURN:             String a = Invoke.chooseOne(3, "a", "b", "c", cmd, "e");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
  AffectedNodeName: a
  26:  Var Pass:              String a = Invoke.chooseOne(3, "a", "b", "c", cmd, "e");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/DifferentParamsPassing_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(a);

------------- 34: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/Expression_MethodInvocation_001_T.java","functionName":"aTaintCase013","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/Expression_MethodInvocation_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase013(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/Expression_MethodInvocation_001_T.java
  AffectedNodeName: run
  27:  CALL:              CmdUtil.run(cmd + "|grep a");
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 35: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/Expression_MethodInvocation_InfixExpression_001_T.java","functionName":"aTaintCase014","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/Expression_MethodInvocation_InfixExpression_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase014(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/Expression_MethodInvocation_InfixExpression_001_T.java
  AffectedNodeName: run
  29:  CALL:              CmdUtil.run(cmd + HttpUtil.doGet("www.test.com"));
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 36: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
Line 34: Runtime.getRuntime().exec(o)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java","functionName":"returnValuePassing001T","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: __taint_src
  21:  SOURCE:      public static void returnValuePassing001T(@RequestParam String __taint_src) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: process
  23:  CALL:          String data = process(__taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: __taint_src
  27:  ARG PASS:      private static String process(String __taint_src) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: tmp
  28:  Var Pass:          String tmp = __taint_src;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: [return value]
  29:  Return Value:          return tmp;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: process
  23:  CALL RETURN:         String data = process(__taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: data
  23:  Var Pass:          String data = process(__taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: __taint_sink
  24:  CALL:          __taint_sink(data);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: o
  32:  ARG PASS:      private static void __taint_sink(String o) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/argument_return_value_passing/return_value_passing_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  34:  SINK:              Runtime.getRuntime().exec(o);

------------- 37: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
Line 28: Runtime.getRuntime().exec(ps.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
  AffectedNodeName: _CTOR_
  27:  CALL:              PS ps = new PS(cmd, "~");
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: cmd
  6:   ARG PASS:      public PS(String cmd, String cmd2) {
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: _CTOR_
  7:   CALL:          super(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/P.java
  AffectedNodeName: cmd
  8:   ARG PASS:      public P(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/P.java
  AffectedNodeName: [this.cmd]
  9:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
  AffectedNodeName: ps
  27:  Var Pass:              PS ps = new PS(cmd, "~");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
  AffectedNodeName: getCmd
  28:  CALL:              Runtime.getRuntime().exec(ps.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
  AffectedNodeName: ps
  28:  ARG PASS:              Runtime.getRuntime().exec(ps.getCmd());
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: getCmd
  12:  CALL:          return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  12:  ARG PASS:          return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/model/custom/P.java
  AffectedNodeName: [return value]
  13:  Return Value:          return this.cmd;
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: getCmd
  12:  CALL RETURN:         return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: [return value]
  12:  Return Value:          return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
  AffectedNodeName: getCmd
  28:  CALL RETURN:             Runtime.getRuntime().exec(ps.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/polymorphism/Expression_Polymorphism_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(ps.getCmd());

------------- 38: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/model/custom/T.java
Line 16: Runtime.getRuntime().exec(this.cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_001_T.java
  AffectedNodeName: _CTOR_
  24:  CALL:          T t = new T(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/T.java
  AffectedNodeName: cmd
  10:  ARG PASS:      public T(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/T.java
  AffectedNodeName: [this.cmd]
  11:  Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_001_T.java
  AffectedNodeName: t
  24:  Var Pass:          T t = new T(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_001_T.java
  AffectedNodeName: run
  25:  CALL:          t.start();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_001_T.java
  AffectedNodeName: t
  25:  ARG PASS:          t.start();
 /src/main/java/com/sast/astbenchmark/model/custom/T.java
  AffectedNodeName: Runtime.getRuntime().exec
  16:  SINK:              Runtime.getRuntime().exec(this.cmd);

------------- 39: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_003_T.java
Line 30: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:                      Runtime.getRuntime().exec(cmd);

------------- 40: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/model/custom/R.java
Line 16: Runtime.getRuntime().exec(this.cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_005_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_005_T.java
  AffectedNodeName: _CTOR_
  25:  CALL:          R r = new R(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/R.java
  AffectedNodeName: cmd
  10:  ARG PASS:      public R(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/R.java
  AffectedNodeName: [this.cmd]
  11:  Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_005_T.java
  AffectedNodeName: r
  25:  Var Pass:          R r = new R(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_005_T.java
  AffectedNodeName: execute
  26:  CALL:          Executors.newCachedThreadPool().execute(r);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_005_T.java
  26:  ARG PASS:          Executors.newCachedThreadPool().execute(r);
 /src/main/java/com/sast/astbenchmark/model/custom/R.java
  AffectedNodeName: Runtime.getRuntime().exec
  16:  SINK:              Runtime.getRuntime().exec(this.cmd);

------------- 41: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/model/custom/TT.java
Line 18: Runtime.getRuntime().exec(this.cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_007_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_007_T.java
  AffectedNodeName: _CTOR_
  26:  CALL:          TT tt = new TT(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/TT.java
  AffectedNodeName: cmd
  12:  ARG PASS:      public TT(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/TT.java
  AffectedNodeName: [this.cmd]
  13:  Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_007_T.java
  AffectedNodeName: tt
  26:  Var Pass:          TT tt = new TT(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_007_T.java
  AffectedNodeName: schedule
  27:  CALL:          timer.schedule(tt, 2000);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_007_T.java
  AffectedNodeName: timer
  27:  ARG PASS:          timer.schedule(tt, 2000);
 /src/main/java/com/sast/astbenchmark/model/custom/TT.java
  AffectedNodeName: Runtime.getRuntime().exec
  18:  SINK:              Runtime.getRuntime().exec(this.cmd);

------------- 42: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_009_T.java
Line 39: Runtime.getRuntime().exec(obj.a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_009_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_009_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_009_T.java
  AffectedNodeName: [obj.a]
  32:  Var Pass:                 obj.a = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/Async_Multithread_009_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  39:  SINK:                      Runtime.getRuntime().exec(obj.a);

------------- 43: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/CompletableFuture_asynchronous_001_T.java
Line 44: Runtime.getRuntime().exec(result.get())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/CompletableFuture_asynchronous_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/CompletableFuture_asynchronous_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/CompletableFuture_asynchronous_001_T.java
  AffectedNodeName: result
  27:  Var Pass:              AtomicReference<String> result = new AtomicReference<>(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/asynchronous/CompletableFuture_asynchronous_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  44:  SINK:              Runtime.getRuntime().exec(result.get());

------------- 44: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
Line 31: Runtime.getRuntime().exec(b.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
  AffectedNodeName: a
  28:  Var Pass:             a = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
  AffectedNodeName: setCmd
  29:  CALL:              b.setCmd(a);
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: cmd
  8:   ARG PASS:      public void setCmd(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: [this.cmd1]
  9:   Var Pass:         this.cmd1 = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
  AffectedNodeName: getCmd
  31:  CALL:              Runtime.getRuntime().exec(b.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
  AffectedNodeName: b
  31:  ARG PASS:              Runtime.getRuntime().exec(b.getCmd());
 /src/main/java/com/sast/astbenchmark/model/CmdObject.java
  AffectedNodeName: [return value]
  17:  Return Value:          return cmd1;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
  AffectedNodeName: getCmd
  31:  CALL RETURN:             Runtime.getRuntime().exec(b.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignObjectAttribute_002_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(b.getCmd());

------------- 45: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByFixedValue_002_T.java
Line 25: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByFixedValue_002_T.java","functionName":"case01582","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByFixedValue_002_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> case01582(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByFixedValue_002_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  25:  SINK:              Runtime.getRuntime().exec(cmd);

------------- 46: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByVariable_002_T.java
Line 28: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByVariable_002_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByVariable_002_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByVariable_002_T.java
  AffectedNodeName: a
  27:  Var Pass:             a = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/AssignedByVariable_002_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(a);

------------- 47: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_001_T.java
Line 32: Runtime.getRuntime().exec(dc2.data)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_001_T.java
  AffectedNodeName: taintMe
  29:  CALL:              Invoke.taintMe(dc1, cmd);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: taint
  23:  ARG PASS:      public static void taintMe(DataClass dc, String taint) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: tainted
  24:  Var Pass:          String tainted = taint;
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [dc.data]
  25:  Var Pass:         dc.data = tainted;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_001_T.java
  AffectedNodeName: copy
  30:  CALL:              Invoke.copy(dc1, dc2);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: dc1
  7:   ARG PASS:      public static void copy(DataClass dc1, DataClass dc2) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [dc2.data]
  8:   Var Pass:         dc2.data = dc1.data;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(dc2.data);

------------- 48: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_003_T.java
Line 32: Runtime.getRuntime().exec(b.attr.b)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_003_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_003_T.java
  AffectedNodeName: [a.b]
  31:  Var Pass:             a.b = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/normal_stmt/FlowSensitiveAlias_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(b.attr.b);

------------- 49: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/exception_throw/Statement_TryStatement_002_F.java
Line 27: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/exception_throw/Statement_TryStatement_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/exception_throw/Statement_TryStatement_002_F.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/exception_throw/Statement_TryStatement_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(cmd);

------------- 50: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_001_T.java
Line 33: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_001_T.java
  AffectedNodeName: a
  27:  Var Pass:                 a = cmd + "|";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  33:  SINK:              Runtime.getRuntime().exec(a);

------------- 51: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_003_T.java
Line 36: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_003_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_003_T.java
  AffectedNodeName: a
  29:  Var Pass:                     a = cmd + "|";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/explicit_jump_control/Statement_InterruptStatement_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  36:  SINK:              Runtime.getRuntime().exec(a);

------------- 52: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_001_T.java
Line 28: Runtime.getRuntime().exec(cmdStr)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_001_T.java","functionName":"aTaintCase0110","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_001_T.java
  AffectedNodeName: request
  24:  SOURCE:      public Map<String, Object> aTaintCase0110(@RequestParam("cmd") String cmd, HttpServletRequest request) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_001_T.java
  AffectedNodeName: cmdStr
  27:  Var Pass:              String cmdStr = request.getParameterMap().get("cmd")[0];
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(cmdStr);

------------- 53: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_003_T.java
Line 28: Runtime.getRuntime().exec(cookies.0.getName())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_003_T.java","functionName":"aTaintCase0111","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_003_T.java
  AffectedNodeName: request
  24:  SOURCE:      public Map<String, Object> aTaintCase0111(HttpServletRequest request) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_003_T.java
  AffectedNodeName: cookies
  27:  Var Pass:              Cookie[] cookies = request.getCookies();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(cookies[0].getName());

------------- 54: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_005_T.java
Line 27: Runtime.getRuntime().exec(arr)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_005_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_005_T.java
  AffectedNodeName: arr[1]
  26:  Var Pass:             arr[1] = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_005_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(arr);

------------- 55: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_007_T.java
Line 28: Runtime.getRuntime().exec(data.0.0)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_007_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_007_T.java
  AffectedNodeName: data[0][0]
  27:  Var Pass:             data[0][0] = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_007_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(data[0][0]);

------------- 56: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_009_T.java
Line 29: Runtime.getRuntime().exec(s)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_009_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_009_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_009_T.java
  AffectedNodeName: data
  27:  Var Pass:              String[] data = new String[] {cmd, "aa", "b"};
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_009_T.java
  AffectedNodeName: s
  28:  Var Pass:              String[] s = Arrays.copyOf(data, 3);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/array/Base_ArrayAccess_009_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(s);

------------- 57: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_001_T.java
Line 33: Runtime.getRuntime().exec(cmd.get(0))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_001_T.java","functionName":"aTaintCase0141","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_001_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> aTaintCase0141(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  33:  SINK:              Runtime.getRuntime().exec(cmd.get(0));

------------- 58: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_003_T.java
Line 32: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_003_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> testcase(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_003_T.java
  AffectedNodeName: SinkUtil.sink
  32:  SINK:          SinkUtil.sink(cmd);

------------- 59: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_005_T.java
Line 32: SinkUtil.sink(list)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_005_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> testcase(@RequestBody String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_005_T.java
  AffectedNodeName: add
  29:  CALL:          list.add(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_005_T.java
  AffectedNodeName: SinkUtil.sink
  32:  SINK:          SinkUtil.sink(list);

------------- 60: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_007_T.java
Line 32: SinkUtil.sink(list)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_007_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> testcase(@RequestBody String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_007_T.java
  AffectedNodeName: add
  29:  CALL:          list.add(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_List_007_T.java
  AffectedNodeName: SinkUtil.sink
  32:  SINK:          SinkUtil.sink(list);

------------- 61: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_001_T.java
Line 39: SinkUtil.sink(queue)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_001_T.java","functionName":"aTaintCase0142","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_001_T.java
  AffectedNodeName: cmd
  31:  SOURCE:      public Map<String, Object> aTaintCase0142(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_001_T.java
  AffectedNodeName: add
  38:  CALL:          queue.add(cmd.get(0));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_001_T.java
  AffectedNodeName: SinkUtil.sink
  39:  SINK:          SinkUtil.sink(queue);

------------- 62: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_003_T.java
Line 37: Runtime.getRuntime().exec(queue.peek())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_003_T.java","functionName":"aTaintCase0142","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_003_T.java
  AffectedNodeName: cmd
  28:  SOURCE:      public Map<String, Object> aTaintCase0142(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_003_T.java
  AffectedNodeName: add
  36:  CALL:              queue.add(cmd.get(0));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  37:  SINK:              Runtime.getRuntime().exec(queue.peek());

------------- 63: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_005_T.java
Line 32: SinkUtil.sink(queue)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_005_T.java","functionName":"aTaintCase0142","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_005_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> aTaintCase0142(@RequestBody String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_005_T.java
  AffectedNodeName: add
  30:  CALL:          queue.add(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Queue_005_T.java
  AffectedNodeName: SinkUtil.sink
  32:  SINK:          SinkUtil.sink(queue);

------------- 64: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java
Line 38: SinkUtil.sink(stringSet)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java","functionName":"aTaintCase0143","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java
  AffectedNodeName: cmd
  31:  SOURCE:      public Map<String, Object> aTaintCase0143(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java
  AffectedNodeName: stringSet
  37:  Var Pass:          Set<String> stringSet = new HashSet<>(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java
  AffectedNodeName: SinkUtil.sink
  38:  SINK:          SinkUtil.sink(stringSet);

------------- 65: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java
Line 38: SinkUtil.sink(stringSet)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java","functionName":"aTaintCase0143","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java
  AffectedNodeName: cmd
  31:  SOURCE:      public Map<String, Object> aTaintCase0143(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_001_T.java
  AffectedNodeName: SinkUtil.sink
  38:  SINK:          SinkUtil.sink(stringSet);

------------- 66: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java
Line 37: Runtime.getRuntime().exec(stringSet.stream().iterator().next())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java","functionName":"aTaintCase0143","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java
  AffectedNodeName: cmd
  28:  SOURCE:      public Map<String, Object> aTaintCase0143(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java
  AffectedNodeName: stringSet
  34:  Var Pass:          Set<String> stringSet = new HashSet<>(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  37:  SINK:              Runtime.getRuntime().exec(stringSet.stream().iterator().next());

------------- 67: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java
Line 37: Runtime.getRuntime().exec(stringSet.stream().iterator().next())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java","functionName":"aTaintCase0143","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java
  AffectedNodeName: cmd
  28:  SOURCE:      public Map<String, Object> aTaintCase0143(@RequestBody List<String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  37:  SINK:              Runtime.getRuntime().exec(stringSet.stream().iterator().next());

------------- 68: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_005_T.java
Line 32: SinkUtil.sink(stringSet)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_005_T.java","functionName":"aTaintCase0143","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_005_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> aTaintCase0143(@RequestBody String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_005_T.java
  AffectedNodeName: add
  29:  CALL:          stringSet.add(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/collections/Base_Set_005_T.java
  AffectedNodeName: SinkUtil.sink
  32:  SINK:          SinkUtil.sink(stringSet);

------------- 69: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
Line 28: Runtime.getRuntime().exec(a.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
  AffectedNodeName: _CTOR_
  27:  CALL:              G<String> a = new G<>(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/G.java
  AffectedNodeName: cmd
  6:   ARG PASS:      public G(T cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/G.java
  AffectedNodeName: [this.cmd]
  7:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
  AffectedNodeName: a
  27:  Var Pass:              G<String> a = new G<>(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
  AffectedNodeName: getCmd
  28:  CALL:              Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
  AffectedNodeName: a
  28:  ARG PASS:              Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/model/custom/G.java
  AffectedNodeName: [return value]
  11:  Return Value:          return this.cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
  AffectedNodeName: getCmd
  28:  CALL RETURN:             Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(a.getCmd());

------------- 70: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
Line 28: Runtime.getRuntime().exec((String)a.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
  AffectedNodeName: _CTOR_
  26:  CALL:          G<?> a = new G<>(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/G.java
  AffectedNodeName: cmd
  6:   ARG PASS:      public G(T cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/G.java
  AffectedNodeName: [this.cmd]
  7:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
  AffectedNodeName: a
  26:  Var Pass:          G<?> a = new G<>(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
  AffectedNodeName: getCmd
  28:  CALL:              Runtime.getRuntime().exec((String) a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
  AffectedNodeName: a
  28:  ARG PASS:              Runtime.getRuntime().exec((String) a.getCmd());
 /src/main/java/com/sast/astbenchmark/model/custom/G.java
  AffectedNodeName: [return value]
  11:  Return Value:          return this.cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
  AffectedNodeName: getCmd
  28:  CALL RETURN:             Runtime.getRuntime().exec((String) a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/generics/CallExpression_CustomCode_Class_generics_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec((String) a.getCmd());

------------- 71: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_001_T.java
Line 33: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_001_T.java","functionName":"aTaintCase0140","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0140(@RequestBody Map<String, String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_001_T.java
  AffectedNodeName: SinkUtil.sink
  33:  SINK:          SinkUtil.sink(cmd);

------------- 72: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_003_T.java
Line 31: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_003_T.java","functionName":"aTaintCase0140","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0140(@RequestBody Map<String, String> cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/map/Base_Map_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 73: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_001_T.java
Line 33: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_001_T.java","functionName":"aTaintCase0151","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0151(@RequestBody byte[] cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_001_T.java
  AffectedNodeName: SinkUtil.sink
  33:  SINK:          SinkUtil.sink(cmd);

------------- 74: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_003_T.java
Line 31: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_003_T.java","functionName":"aTaintCase0151_2","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0151_2(@RequestBody byte[] cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_ByteArray_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 75: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_001_T.java
Line 29: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_001_T.java","functionName":"aTaintCase0138","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0138(@PathVariable byte cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_001_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:          SinkUtil.sink(cmd);

------------- 76: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_003_T.java
Line 33: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_003_T.java","functionName":"aTaintCase0144","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_003_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0144(@PathVariable Byte cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_003_T.java
  AffectedNodeName: SinkUtil.sink
  33:  SINK:          SinkUtil.sink(cmd);

------------- 77: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_005_T.java
Line 27: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_005_T.java","functionName":"aTaintCase0138_2","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_005_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0138_2(@PathVariable byte cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_005_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 78: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_007_T.java
Line 31: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_007_T.java","functionName":"aTaintCase0144_2","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_007_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0144_2(@PathVariable Byte cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Byte_007_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 79: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_001_T.java
Line 33: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_001_T.java","functionName":"aTaintCase0150","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0150(@RequestBody char[] cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_001_T.java
  AffectedNodeName: SinkUtil.sink
  33:  SINK:          SinkUtil.sink(cmd);

------------- 80: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_003_T.java
Line 31: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_003_T.java","functionName":"aTaintCase0150","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0150(@RequestBody char[] cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_CharArray_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 81: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_001_T.java
Line 29: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_001_T.java","functionName":"aTaintCase0137","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0137(@PathVariable char cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_001_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:          SinkUtil.sink(cmd);

------------- 82: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_003_T.java
Line 33: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_003_T.java","functionName":"aTaintCase0148","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_003_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0148(@PathVariable Character cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_003_T.java
  AffectedNodeName: SinkUtil.sink
  33:  SINK:          SinkUtil.sink(cmd);

------------- 83: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_005_T.java
Line 26: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_005_T.java","functionName":"aTaintCase0137","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_005_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0137(@PathVariable char cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_005_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 84: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_007_T.java
Line 31: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_007_T.java","functionName":"aTaintCase0148_2","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_007_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0148_2(@PathVariable Character cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Char_007_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 85: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_001_T.java
Line 29: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_001_T.java","functionName":"aTaintCase0139","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0139(@PathVariable double cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_001_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:          SinkUtil.sink(cmd);

------------- 86: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_003_T.java
Line 30: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_003_T.java","functionName":"aTaintCase0139","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_003_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0139(@PathVariable double cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Double_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 87: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_001_T.java
Line 29: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_001_T.java","functionName":"aTaintCase0139","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0139(@PathVariable float cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_001_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:          SinkUtil.sink(cmd);

------------- 88: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_003_T.java
Line 30: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_003_T.java","functionName":"aTaintCase0139","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_003_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0139(@PathVariable float cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Float_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 89: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_001_T.java
Line 33: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_001_T.java","functionName":"aTaintCase0145","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0145(@PathVariable Integer cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_001_T.java
  AffectedNodeName: SinkUtil.sink
  33:  SINK:          SinkUtil.sink(cmd);

------------- 90: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_003_T.java
Line 31: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_003_T.java","functionName":"aTaintCase0145","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0145(@PathVariable Integer cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 91: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_005_T.java
Line 26: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_005_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@PathVariable int cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_005_T.java
  AffectedNodeName: SinkUtil.sink
  26:  SINK:          SinkUtil.sink(cmd);

------------- 92: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_007_T.java
Line 26: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_007_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable int cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Integer_007_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 93: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_001_T.java
Line 29: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_001_T.java","functionName":"aTaintCase0139","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_001_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0139(@PathVariable long cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_001_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:          SinkUtil.sink(cmd);

------------- 94: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_003_T.java
Line 33: SinkUtil.sink(cmd)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_003_T.java","functionName":"aTaintCase0146","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_003_T.java
  AffectedNodeName: cmd
  27:  SOURCE:      public Map<String, Object> aTaintCase0146(@PathVariable Long cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_003_T.java
  AffectedNodeName: SinkUtil.sink
  33:  SINK:          SinkUtil.sink(cmd);

------------- 95: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_005_T.java
Line 27: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_005_T.java","functionName":"aTaintCase0139","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_005_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0139(@PathVariable long cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_005_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 96: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_007_T.java
Line 31: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_007_T.java","functionName":"aTaintCase0146","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_007_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0146(@PathVariable Long cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/primitives/Base_Long_007_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 97: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringArray_001_T.java
Line 31: Runtime.getRuntime().exec(cmd.0)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringArray_001_T.java","functionName":"aTaintCase0149","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringArray_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0149(@RequestBody String[] cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringArray_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(cmd[0]);

------------- 98: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuffer_001_T.java
Line 33: Runtime.getRuntime().exec(data.toString())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuffer_001_T.java","functionName":"aTaintCase0153","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuffer_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0153(@RequestBody String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuffer_001_T.java
  AffectedNodeName: append
  31:  CALL:          data.append(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuffer_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  33:  SINK:              Runtime.getRuntime().exec(data.toString());

------------- 99: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuilder_001_T.java
Line 33: Runtime.getRuntime().exec(data.toString())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuilder_001_T.java","functionName":"aTaintCase0154","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuilder_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0154(@RequestBody String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuilder_001_T.java
  AffectedNodeName: append
  31:  CALL:          data.append(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_StringBuilder_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  33:  SINK:              Runtime.getRuntime().exec(data.toString());

------------- 100: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_String_001_T.java
Line 31: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_String_001_T.java","functionName":"aTaintCase0152","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_String_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0152(@RequestBody String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/datatype/string/Base_String_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(cmd);

------------- 101: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/abstract_class/CallExpression_CustomCode_abstract_class_001_T.java
Line 32: Runtime.getRuntime().exec(ac.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/abstract_class/CallExpression_CustomCode_abstract_class_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/abstract_class/CallExpression_CustomCode_abstract_class_001_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/abstract_class/CallExpression_CustomCode_abstract_class_001_T.java
  AffectedNodeName: setCmd
  31:  CALL:              ac.setCmd(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/ABS.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public void setCmd(String cmd){
 /src/main/java/com/sast/astbenchmark/model/custom/ABS.java
  AffectedNodeName: [this.cmd]
  6:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/model/custom/AC.java
  AffectedNodeName: [return value]
  6:   Return Value:          return super.cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/abstract_class/CallExpression_CustomCode_abstract_class_001_T.java
  AffectedNodeName: getCmd
  32:  CALL RETURN:             Runtime.getRuntime().exec(ac.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/abstract_class/CallExpression_CustomCode_abstract_class_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(ac.getCmd());

------------- 102: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
Line 35: Runtime.getRuntime().exec(ac.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
  AffectedNodeName: setCmd
  34:  CALL:              ac.setCmd(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/ABS.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public void setCmd(String cmd){
 /src/main/java/com/sast/astbenchmark/model/custom/ABS.java
  AffectedNodeName: [this.cmd]
  6:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
  AffectedNodeName: getCmd
  35:  CALL:              Runtime.getRuntime().exec(ac.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
  AffectedNodeName: ac
  35:  ARG PASS:              Runtime.getRuntime().exec(ac.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
  AffectedNodeName: [return value]
  31:  Return Value:                      return this.cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
  AffectedNodeName: getCmd
  35:  CALL RETURN:             Runtime.getRuntime().exec(ac.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/anonymous_object/CallExpression_CustomCode_anonymous_object_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  35:  SINK:              Runtime.getRuntime().exec(ac.getCmd());

------------- 103: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
Line 28: Runtime.getRuntime().exec(a.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
  AffectedNodeName: _CTOR_
  26:  CALL:          O a = new O(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/O.java
  AffectedNodeName: cmd
  6:   ARG PASS:      public O(String cmd){
 /src/main/java/com/sast/astbenchmark/model/custom/O.java
  AffectedNodeName: [this.cmd]
  7:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
  AffectedNodeName: a
  26:  Var Pass:          O a = new O(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
  AffectedNodeName: getCmd
  28:  CALL:              Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
  AffectedNodeName: a
  28:  ARG PASS:              Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/model/custom/O.java
  AffectedNodeName: [return value]
  12:  Return Value:              return O.this.cmd;
 /src/main/java/com/sast/astbenchmark/model/custom/O.java
  AffectedNodeName: getCmd
  18:  CALL RETURN:         return i.getCmd();
 /src/main/java/com/sast/astbenchmark/model/custom/O.java
  AffectedNodeName: [return value]
  18:  Return Value:          return i.getCmd();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
  AffectedNodeName: getCmd
  28:  CALL RETURN:             Runtime.getRuntime().exec(a.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(a.getCmd());

------------- 104: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
Line 26: Runtime.getRuntime().exec(local(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: local
  26:  CALL:              Runtime.getRuntime().exec(local(cmd));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: cmd
  34:  ARG PASS:      public static String local(String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: [return value]
  37:  Return Value:                  return cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: getCmd
  41:  CALL RETURN:         return local.getCmd();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: [return value]
  41:  Return Value:          return local.getCmd();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: local
  26:  CALL RETURN:             Runtime.getRuntime().exec(local(cmd));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Class_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              Runtime.getRuntime().exec(local(cmd));

------------- 105: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Interface_001_T.java
Line 28: Runtime.getRuntime().exec(s.getCmd(ls, cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Interface_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Interface_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Interface_001_T.java
  AffectedNodeName: <anonymous_27_46>
  28:  CALL:              Runtime.getRuntime().exec(s.getCmd("ls", cmd));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Interface_001_T.java
  AffectedNodeName: b
  27:  ARG PASS:              Inter s = (Serializable & Inter) (a, b) -> a + b;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Interface_001_T.java
  AffectedNodeName: <anonymous_27_46>
  28:  CALL RETURN:             Runtime.getRuntime().exec(s.getCmd("ls", cmd));
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/complex_object/CallExpression_CustomCode_Interface_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(s.getCmd("ls", cmd));

------------- 106: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/simple_object/simple_object_001_T.java
Line 29: SinkUtil.sink(a)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/simple_object/simple_object_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/simple_object/simple_object_001_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/simple_object/simple_object_001_T.java
  AffectedNodeName: _CTOR_
  27:  CALL:          O a = new O(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/O.java
  AffectedNodeName: cmd
  6:   ARG PASS:      public O(String cmd){
 /src/main/java/com/sast/astbenchmark/model/custom/O.java
  AffectedNodeName: [this.cmd]
  7:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/simple_object/simple_object_001_T.java
  AffectedNodeName: a
  27:  Var Pass:          O a = new O(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/interface_class/simple_object/simple_object_001_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:              SinkUtil.sink(a);

------------- 107: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_001_T.java
Line 29: SinkUtil.sink(P.t)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_001_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_001_T.java
  AffectedNodeName: [P.t]
  27:  Var Pass:         P.t = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_001_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:              SinkUtil.sink(P.t);

------------- 108: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_002_F.java
Line 28: SinkUtil.sink(P.t)
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_001_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_001_T.java
  AffectedNodeName: [P.t]
  27:  Var Pass:         P.t = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/variable_scope/static_variable/static_variable_002_F.java
  AffectedNodeName: SinkUtil.sink
  28:  SINK:              SinkUtil.sink(P.t);

------------- 109: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/model/custom/T.java
Line 16: Runtime.getRuntime().exec(this.cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_001_T.java
  AffectedNodeName: _CTOR_
  24:  CALL:          T t = new T(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/T.java
  AffectedNodeName: cmd
  10:  ARG PASS:      public T(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/T.java
  AffectedNodeName: [this.cmd]
  11:  Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_001_T.java
  AffectedNodeName: t
  24:  Var Pass:          T t = new T(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_001_T.java
  AffectedNodeName: run
  25:  CALL:          t.start();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_001_T.java
  AffectedNodeName: t
  25:  ARG PASS:          t.start();
 /src/main/java/com/sast/astbenchmark/model/custom/T.java
  AffectedNodeName: Runtime.getRuntime().exec
  16:  SINK:              Runtime.getRuntime().exec(this.cmd);

------------- 110: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_003_T.java
Line 30: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:                      Runtime.getRuntime().exec(cmd);

------------- 111: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/model/custom/R.java
Line 16: Runtime.getRuntime().exec(this.cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_005_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_005_T.java
  AffectedNodeName: _CTOR_
  25:  CALL:          R r = new R(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/R.java
  AffectedNodeName: cmd
  10:  ARG PASS:      public R(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/R.java
  AffectedNodeName: [this.cmd]
  11:  Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_005_T.java
  AffectedNodeName: r
  25:  Var Pass:          R r = new R(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_005_T.java
  AffectedNodeName: execute
  26:  CALL:          Executors.newCachedThreadPool().execute(r);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_005_T.java
  26:  ARG PASS:          Executors.newCachedThreadPool().execute(r);
 /src/main/java/com/sast/astbenchmark/model/custom/R.java
  AffectedNodeName: Runtime.getRuntime().exec
  16:  SINK:              Runtime.getRuntime().exec(this.cmd);

------------- 112: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/model/custom/TT.java
Line 18: Runtime.getRuntime().exec(this.cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_007_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_007_T.java
  AffectedNodeName: _CTOR_
  26:  CALL:          TT tt = new TT(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/TT.java
  AffectedNodeName: cmd
  12:  ARG PASS:      public TT(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/TT.java
  AffectedNodeName: [this.cmd]
  13:  Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_007_T.java
  AffectedNodeName: tt
  26:  Var Pass:          TT tt = new TT(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_007_T.java
  AffectedNodeName: schedule
  27:  CALL:          timer.schedule(tt, 2000);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_007_T.java
  AffectedNodeName: timer
  27:  ARG PASS:          timer.schedule(tt, 2000);
 /src/main/java/com/sast/astbenchmark/model/custom/TT.java
  AffectedNodeName: Runtime.getRuntime().exec
  18:  SINK:              Runtime.getRuntime().exec(this.cmd);

------------- 113: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_009_T.java
Line 39: Runtime.getRuntime().exec(obj.a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_009_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_009_T.java
  AffectedNodeName: cmd
  26:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_009_T.java
  AffectedNodeName: [obj.a]
  32:  Var Pass:                 obj.a = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/multi_thread/Async_Multithreading_009_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  39:  SINK:                      Runtime.getRuntime().exec(obj.a);

------------- 114: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_001_T.java
Line 44: Runtime.getRuntime().exec(result.get())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_001_T.java
  AffectedNodeName: result
  27:  Var Pass:              AtomicReference<String> result = new AtomicReference<>(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  44:  SINK:              Runtime.getRuntime().exec(result.get());

------------- 115: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
Line 47: Runtime.getRuntime().exec(notCleanedResult)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
  AffectedNodeName: cmd
  28:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
  AffectedNodeName: result
  30:  Var Pass:          AtomicReference<String> result = new AtomicReference<>(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
  AffectedNodeName: [return value]
  37:  Return Value:                      return "Task completed with input: " + result.get();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
  AffectedNodeName: <anonymous_33_76>
  33:  CALL RETURN:             CompletableFuture<Void> future = CompletableFuture.supplyAsync(() -> {
  34:  CALL RETURN:                 // 异步任务开始
  35:  CALL RETURN:                 try {
  36:  CALL RETURN:                     Thread.sleep(2000); // 模拟长时间任务
  37:  CALL RETURN:                     return "Task completed with input: " + result.get();
  38:  CALL RETURN:                 } catch (InterruptedException e) {
  39:  CALL RETURN:                     throw new RuntimeException(e);
  40:  CALL RETURN:                 }
  41:  CALL RETURN:             }, executorService).thenApply(output -> {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
  AffectedNodeName: [return value]
  43:  Return Value:                  return result.get();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
  AffectedNodeName: <anonymous_41_43>
  41:  CALL RETURN:             }, executorService).thenApply(output -> {
  42:  CALL RETURN:                 // 处理结果
  43:  CALL RETURN:                 return result.get();
  44:  CALL RETURN:             }).thenAccept(notCleanedResult -> {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/asynchronous_tracing/promise_callback_await/CompletableFuture_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  47:  SINK:                      Runtime.getRuntime().exec(notCleanedResult);

------------- 116: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_001_T.java","functionName":"aTaintCase015","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase015(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_001_T.java
  AffectedNodeName: run
  29:  CALL:                  CmdUtil.run(cmd);
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 117: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_003_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_003_T.java
  AffectedNodeName: run
  28:  CALL:                  CmdUtil.run(cmd);
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 118: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_005_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_005_T.java
  AffectedNodeName: run
  31:  CALL:                  CmdUtil.run(cmd);
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 119: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_007_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_007_T.java
  AffectedNodeName: a
  27:  Var Pass:             if ((a = cmd) != null) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_IfStatement_007_T.java
  AffectedNodeName: run
  28:  CALL:                  CmdUtil.run(a);
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 120: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_SwitchStatement_001_T.java","functionName":"aTaintCase016","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_SwitchStatement_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase016(@PathVariable String cmd, @PathVariable String type) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/conditional_stmt/Statement_SwitchStatement_001_T.java
  AffectedNodeName: run
  29:  CALL:                      CmdUtil.run("mkdir" + " " + cmd);
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 121: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_DoStatement_001_T.java
Line 33: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_DoStatement_001_T.java","functionName":"aTaintCase0128","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_DoStatement_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> aTaintCase0128(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_DoStatement_001_T.java
  AffectedNodeName: a
  29:  Var Pass:                 a = cmd + "|";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_DoStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  33:  SINK:              Runtime.getRuntime().exec(a);

------------- 122: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForEachStatement_001_T.java
Line 30: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForEachStatement_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForEachStatement_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForEachStatement_001_T.java
  AffectedNodeName: data
  25:  Var Pass:              String[] data = new String[] {"ls", "foo", cmd};
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForEachStatement_001_T.java
  AffectedNodeName: a
  28:  Var Pass:                 a = i + "|";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForEachStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(a);

------------- 123: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForStatement_001_T.java
Line 29: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForStatement_001_T.java","functionName":"aTaintCase0127","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForStatement_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> aTaintCase0127(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForStatement_001_T.java
  AffectedNodeName: a
  27:  Var Pass:                 a = cmd + "|";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_ForStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(a);

------------- 124: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_WhileStatement_001_T.java
Line 31: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_WhileStatement_001_T.java","functionName":"aTaintCase0118","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_WhileStatement_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0118(@PathVariable String cmd, @PathVariable String type) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_WhileStatement_001_T.java
  AffectedNodeName: a
  28:  Var Pass:                 a = " " + cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/control_flow/loop_stmt/Statement_WhileStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(a);

------------- 125: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_001_T.java
Line 25: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  25:  SINK:              assert cmd == null : Runtime.getRuntime().exec(cmd);

------------- 126: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_002_F.java
Line 25: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_002_F.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/assert_statement/Statement_AssertStatement_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  25:  SINK:              assert cmd != null : Runtime.getRuntime().exec(cmd);

------------- 127: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_FinallyStatement_001_T.java
Line 30: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_FinallyStatement_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_FinallyStatement_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_FinallyStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:                  Runtime.getRuntime().exec(cmd);

------------- 128: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryBlock_001_T.java
Line 25: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryBlock_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryBlock_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryBlock_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  25:  SINK:              Runtime.getRuntime().exec(cmd);

------------- 129: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryCatchStatement_001_T.java
Line 29: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryCatchStatement_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryCatchStatement_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/exception_error/exception_throw/Statement_TryCatchStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:                  Runtime.getRuntime().exec(cmd);

------------- 130: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_001_T.java
Line 31: Runtime.getRuntime().exec(b.0)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_001_T.java","functionName":"aTaintCase018","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> aTaintCase018(@PathVariable String[] cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(b[0]);

------------- 131: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_003_T.java
Line 27: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_003_T.java","functionName":"aTaintCase011","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_003_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase011(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_003_T.java
  AffectedNodeName: a
  26:  Var Pass:              String a = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_AssignmentExpression_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(a);

------------- 132: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_BitOperation_001_T.java
Line 27: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_BitOperation_001_T.java","functionName":"aTaintCase0159","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_BitOperation_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0159(@RequestParam char cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_BitOperation_001_T.java
  AffectedNodeName: cmd
  26:  Var Pass:             cmd = (char) (cmd << 1);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_BitOperation_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 133: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_ClassInstance_Infix_001_T.java
Line 26: Runtime.getRuntime().exec(new String(cmd+ &))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_ClassInstance_Infix_001_T.java","functionName":"aTaintCase0113","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_ClassInstance_Infix_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0113(@RequestParam(defaultValue = "ls") String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_ClassInstance_Infix_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              Runtime.getRuntime().exec(new String(cmd + " &"));

------------- 134: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InfixExpression_001_T.java
Line 27: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InfixExpression_001_T.java","functionName":"aTaintCase012","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InfixExpression_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase012(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InfixExpression_001_T.java
  AffectedNodeName: a
  26:  Var Pass:              String a = cmd + "a";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InfixExpression_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(a);

------------- 135: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InstanceofExpression_001_T.java
Line 28: Runtime.getRuntime().exec(data)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InstanceofExpression_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InstanceofExpression_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable Object cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InstanceofExpression_001_T.java
  AffectedNodeName: data
  27:  Var Pass:                  String data = (String) cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_InstanceofExpression_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:                  Runtime.getRuntime().exec(data);

------------- 136: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PostfixExpression_001_T.java
Line 28: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PostfixExpression_001_T.java","functionName":"aTaintCase0136","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PostfixExpression_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0136(@PathVariable int cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PostfixExpression_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 137: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PrefixExpression_001_T.java
Line 27: Runtime.getRuntime().exec(String.valueOf(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PrefixExpression_001_T.java","functionName":"aTaintCase0135","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PrefixExpression_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0135(@PathVariable int cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Expression_PrefixExpression_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(String.valueOf(cmd));

------------- 138: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Statement_VariableDeclarationStatement_001_T.java
Line 28: Runtime.getRuntime().exec(new String(data))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Statement_VariableDeclarationStatement_001_T.java","functionName":"aTaintCase019","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Statement_VariableDeclarationStatement_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase019(@RequestParam char[] cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Statement_VariableDeclarationStatement_001_T.java
  AffectedNodeName: data
  26:  Var Pass:          char[] data = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/basic_expression_operation/Statement_VariableDeclarationStatement_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(new String(data));

------------- 139: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
Line 72: httpclient.execute(httpget)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/conditional_expression/Expression_TernaryOperator_001_T.java","functionName":"aTaintCase0133","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/conditional_expression/Expression_TernaryOperator_001_T.java
  AffectedNodeName: url
  28:  SOURCE:      public Map<String, Object> aTaintCase0133(@PathVariable String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/conditional_expression/Expression_TernaryOperator_001_T.java
  AffectedNodeName: realUrl
  31:  Var Pass:              String realUrl = StringUtils.isBlank(url) ? url : "https://www.test.com";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/conditional_expression/Expression_TernaryOperator_001_T.java
  AffectedNodeName: selfAnonymousFacade
  32:  CALL:              this.ssrfShowManager.selfAnonymousFacade(realUrl);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: url
  64:  ARG PASS:      public void selfAnonymousFacade(String url) {
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: doConnect
  97:  CALL:          ssrfClient.doConnect(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: url
  67:  ARG PASS:              protected void doConnect(String url) {
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: httpget
  69:  Var Pass:                  HttpGet httpget = new HttpGet(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: httpclient.execute
  72:  SINK:                      response = httpclient.execute(httpget);

------------- 140: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
Line 44: httpclient.execute(httpGet)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/lambda_expression/Expression_LambdaExpression_001_T.java","functionName":"aTaintCase017","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/lambda_expression/Expression_LambdaExpression_001_T.java
  AffectedNodeName: url
  25:  SOURCE:      public Map<String, Object> aTaintCase017(@RequestBody String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/lambda_expression/Expression_LambdaExpression_001_T.java
  AffectedNodeName: <anonymous_28_47>
  36:  CALL:          String result = processUrl.apply(url);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/lambda_expression/Expression_LambdaExpression_001_T.java
  AffectedNodeName: u
  28:  ARG PASS:          Function<String, String> processUrl = u -> {
  29:  ARG PASS:              try {
  30:  ARG PASS:                  HttpUtil.doGet(u);
  31:  ARG PASS:                  return "url can connect: " + u;
  32:  ARG PASS:              } catch (Exception e) {
  33:  ARG PASS:                  return "url connect exception: " + u;
  34:  ARG PASS:              }
  35:  ARG PASS:          };
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/lambda_expression/Expression_LambdaExpression_001_T.java
  AffectedNodeName: doGet
  30:  CALL:                  HttpUtil.doGet(u);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  64:  ARG PASS:      public static String doGet(String url) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: doGet
  65:  CALL:          return doGet(url, null);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  22:  ARG PASS:      public static String doGet(String url, Map<String, String> param) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: builder
  31:  Var Pass:              URIBuilder builder = new URIBuilder(url);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: uri
  37:  Var Pass:              URI uri = builder.build();
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpGet
  40:  Var Pass:              HttpGet httpGet = new HttpGet(uri);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpclient.execute
  44:  SINK:              response = httpclient.execute(httpGet);

------------- 141: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/service/DefaultSsrfClient.java
Line 21: httpclient.execute(httpget)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_001_T.java","functionName":"aTaintCase0130","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_001_T.java
  AffectedNodeName: url
  27:  SOURCE:      public Map<String, Object> aTaintCase0130(@PathVariable String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_001_T.java
  AffectedNodeName: connectFacade
  31:  CALL:              this.ssrfShowManager.connectFacade(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: url
  18:  ARG PASS:      public void connectFacade(String url) {
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: doConnect
  19:  CALL:          ssrfClient.doConnect(url);
 /src/main/java/com/sast/astbenchmark/service/DefaultSsrfClient.java
  AffectedNodeName: url
  16:  ARG PASS:      public void doConnect(String url) {
 /src/main/java/com/sast/astbenchmark/service/DefaultSsrfClient.java
  AffectedNodeName: httpget
  18:  Var Pass:          HttpGet httpget = new HttpGet(url);
 /src/main/java/com/sast/astbenchmark/service/DefaultSsrfClient.java
  AffectedNodeName: httpclient.execute
  21:  SINK:              response = httpclient.execute(httpget);

------------- 142: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
Line 36: httpclient.execute(httpget)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_Anonymous_001_T.java","functionName":"aTaintCase0131","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_Anonymous_001_T.java
  AffectedNodeName: url
  27:  SOURCE:      public Map<String, Object> aTaintCase0131(@PathVariable String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_Anonymous_001_T.java
  AffectedNodeName: anonymousFacade
  31:  CALL:              this.ssrfShowManager.anonymousFacade(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: url
  28:  ARG PASS:      public void anonymousFacade(String url) {
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: doConnect
  29:  CALL:          super.doConnect(url, new SsrfClient() {
  30:  CALL:              @Override
  31:  CALL:              protected void doConnect(String url) {
  32:  CALL:                  CloseableHttpClient httpclient = HttpClients.createDefault();
  33:  CALL:                  HttpGet httpget = new HttpGet(url);
  34:  CALL:                  CloseableHttpResponse response = null;
  35:  CALL:                  try {
  36:  CALL:                      response = (httpclient).execute(httpget);
  37:  CALL:                      if (HttpStatus.SC_OK == response.getStatusLine().getStatusCode()) {
  38:  CALL:                          HttpEntity httpEntity = response.getEntity();
  39:  CALL:                          String result = EntityUtils.toString(httpEntity, "UTF-8");
  40:  CALL:                          System.err.println(result);
  41:  CALL:                      }
  42:  CALL:                  } catch (IOException ioe) {
  43:  CALL:                      ioe.printStackTrace();
  44:  CALL:                  } finally {
  45:  CALL:                      try {
  46:  CALL:                          if (response != null) {
  47:  CALL:                              response.close();
  48:  CALL:                          }
  49:  CALL:                      } catch (Exception e) {
  50:  CALL:                      }
  51:  CALL:                      try {
  52:  CALL:                          if (httpclient != null) {
  53:  CALL:                              httpclient.close();
  54:  CALL:                          }
  55:  CALL:                      } catch (Exception e) {
  56:  CALL:                          e.printStackTrace();
  57:  CALL:                      }
  58:  CALL:                  }
  59:  CALL:              }
  60:  CALL:          });
 /src/main/java/com/sast/astbenchmark/service/BaseSSRFShowManagerImpl.java
  AffectedNodeName: url
  5:   ARG PASS:      public void doConnect(String url, SsrfClient ssrfClient) {
 /src/main/java/com/sast/astbenchmark/service/BaseSSRFShowManagerImpl.java
  AffectedNodeName: doConnect
  6:   CALL:          ssrfClient.doConnect(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: url
  31:  ARG PASS:              protected void doConnect(String url) {
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: httpget
  33:  Var Pass:                  HttpGet httpget = new HttpGet(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: httpclient.execute
  36:  SINK:                      response = (httpclient).execute(httpget);

------------- 143: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
Line 72: httpclient.execute(httpget)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_Lambda_001_T.java","functionName":"aTaintCase0132","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_Lambda_001_T.java
  AffectedNodeName: url
  27:  SOURCE:      public Map<String, Object> aTaintCase0132(@PathVariable String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/this_expression/Expression_ThisExpression_Lambda_001_T.java
  AffectedNodeName: selfAnonymousFacade
  31:  CALL:              this.ssrfShowManager.selfAnonymousFacade(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: url
  64:  ARG PASS:      public void selfAnonymousFacade(String url) {
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: doConnect
  97:  CALL:          ssrfClient.doConnect(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: url
  67:  ARG PASS:              protected void doConnect(String url) {
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: httpget
  69:  Var Pass:                  HttpGet httpget = new HttpGet(url);
 /src/main/java/com/sast/astbenchmark/service/SSRFShowManageImpl.java
  AffectedNodeName: httpclient.execute
  72:  SINK:                      response = httpclient.execute(httpget);

------------- 144: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_001_T.java
Line 28: Runtime.getRuntime().exec((String)cmdObject)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_001_T.java","functionName":"aTaintCase0129","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0129(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_001_T.java
  AffectedNodeName: cmdObject
  27:  Var Pass:             cmdObject = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec((String) cmdObject);

------------- 145: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_003_T.java
Line 30: realUrl.openConnection()
SINK RULE:openConnection
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_003_T.java","functionName":"aTaintCase0156","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_003_T.java
  AffectedNodeName: url
  25:  SOURCE:      public Map<String, Object> aTaintCase0156(@PathVariable String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_003_T.java
  AffectedNodeName: realUrl
  29:  Var Pass:              URL realUrl = new URL(url);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/expression/type_cast/Expression_CastExpression_003_T.java
  AffectedNodeName: realUrl.openConnection
  30:  SINK:              HttpURLConnection connection = (HttpURLConnection) realUrl.openConnection();

------------- 146: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
Line 44: httpclient.execute(httpGet)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_CallExpression_Package_001_T.java","functionName":"aTaintCase0157","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_CallExpression_Package_001_T.java
  AffectedNodeName: url
  22:  SOURCE:      public Map<String, Object> aTaintCase0157(@PathVariable String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_CallExpression_Package_001_T.java
  AffectedNodeName: doGet
  25:  CALL:              String result = com.sast.astbenchmark.common.utils.HttpUtil.doGet(url);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  64:  ARG PASS:      public static String doGet(String url) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: doGet
  65:  CALL:          return doGet(url, null);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  22:  ARG PASS:      public static String doGet(String url, Map<String, String> param) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: builder
  31:  Var Pass:              URIBuilder builder = new URIBuilder(url);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: uri
  37:  Var Pass:              URI uri = builder.build();
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpGet
  40:  Var Pass:              HttpGet httpGet = new HttpGet(uri);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpclient.execute
  44:  SINK:              response = httpclient.execute(httpGet);

------------- 147: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_MethodInvocation_Infix_001_T.java","functionName":"aTaintCase014","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_MethodInvocation_Infix_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase014(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_MethodInvocation_Infix_001_T.java
  AffectedNodeName: run
  28:  CALL:              CmdUtil.run(cmd + HttpUtil.doGet("www.test.com"));
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 148: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
Line 7: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_MethodInvocation_Passing_001_T.java","functionName":"aTaintCase013","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_MethodInvocation_Passing_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase013(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/argument_passing/Expression_MethodInvocation_Passing_001_T.java
  AffectedNodeName: run
  26:  CALL:              CmdUtil.run(cmd + "|grep a");
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  5:   ARG PASS:      public static void run(String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: Runtime.getRuntime().exec
  7:   SINK:              Runtime.getRuntime().exec(cmd);

------------- 149: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/chained_call/Expression_MethodInvocation_Argument_002_T.java
Line 27: HttpRequest.post(http://localhost:39100/ataint/case00124/2?cmd=+cmd)
SINK RULE:post
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/chained_call/Expression_MethodInvocation_Argument_002_T.java","functionName":"aTaintCase0116","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/chained_call/Expression_MethodInvocation_Argument_002_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0116(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/chained_call/Expression_MethodInvocation_Argument_002_T.java
  AffectedNodeName: HttpRequest.post
  27:  SINK:              HttpRequest.post("http://localhost:39100/ataint/case00124/2?cmd=" + cmd)

------------- 150: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java
Line 33: Runtime.getRuntime().exec(o)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java","functionName":"higher_order_function_001_T","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java
  AffectedNodeName: __taint_src
  27:  SOURCE:      public void higher_order_function_001_T(@RequestParam String __taint_src) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java
  AffectedNodeName: applyConsumer
  28:  CALL:          applyConsumer(higher_order_function_001_T::__taint_sink, __taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java
  AffectedNodeName: message
  22:  ARG PASS:      public static void applyConsumer(Consumer<String> consumer, String message) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java
  AffectedNodeName: __taint_sink
  23:  CALL:          consumer.accept(message);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java
  AffectedNodeName: o
  31:  ARG PASS:      private static void __taint_sink(String o) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/higher_order_function/higher_order_function_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  33:  SINK:              Runtime.getRuntime().exec(o);

------------- 151: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_002_T.java
Line 28: Runtime.getRuntime().exec(exec)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_002_T.java","functionName":"aTaintCase0155","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_002_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> aTaintCase0155(@RequestParam(defaultValue = "ls") String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_002_T.java
  AffectedNodeName: exec
  27:  Var Pass:              String exec = String.valueOf(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_002_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(exec);

------------- 152: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_004_T.java
Line 26: Runtime.getRuntime().exec(new String(cmd))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_004_T.java","functionName":"aTaintCase0160","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_004_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0160(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_004_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              Runtime.getRuntime().exec(new String(cmd));

------------- 153: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_006_T.java
Line 27: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_006_T.java","functionName":"aTaintCase0161","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_006_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0161(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_006_T.java
  AffectedNodeName: cmd
  26:  Var Pass:             cmd = cmd.concat(" -la");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/CallExpression_NoSourceCode_Native_006_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(cmd);

------------- 154: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_CallExpression_Array_002_T.java
Line 27: Runtime.getRuntime().exec(String.valueOf(chars))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_CallExpression_Array_002_T.java","functionName":"aTaintCase0194","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_CallExpression_Array_002_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0194(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_CallExpression_Array_002_T.java
  AffectedNodeName: chars
  26:  Var Pass:              char[] chars = cmd.toCharArray();
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_CallExpression_Array_002_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(String.valueOf(chars));

------------- 155: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_MethodInvocation_MethodInvocation_002_T.java
Line 27: Runtime.getRuntime().exec(builder.toString())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_MethodInvocation_MethodInvocation_002_T.java","functionName":"aTaintCase0114","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_MethodInvocation_MethodInvocation_002_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> aTaintCase0114(@RequestParam(defaultValue = "ls") String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_MethodInvocation_MethodInvocation_002_T.java
  AffectedNodeName: append
  26:  CALL:              builder.append(cmd.toUpperCase());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/library_function/Expression_MethodInvocation_MethodInvocation_002_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(builder.toString());

------------- 156: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
Line 27: Runtime.getRuntime().exec(ps.getCmd())
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
  AffectedNodeName: _CTOR_
  26:  CALL:              PS ps = new PS(cmd, "~");
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: cmd
  6:   ARG PASS:      public PS(String cmd, String cmd2) {
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: _CTOR_
  7:   CALL:          super(cmd);
 /src/main/java/com/sast/astbenchmark/model/custom/P.java
  AffectedNodeName: cmd
  8:   ARG PASS:      public P(String cmd) {
 /src/main/java/com/sast/astbenchmark/model/custom/P.java
  AffectedNodeName: [this.cmd]
  9:   Var Pass:         this.cmd = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
  AffectedNodeName: ps
  26:  Var Pass:              PS ps = new PS(cmd, "~");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
  AffectedNodeName: getCmd
  27:  CALL:              Runtime.getRuntime().exec(ps.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
  AffectedNodeName: ps
  27:  ARG PASS:              Runtime.getRuntime().exec(ps.getCmd());
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: getCmd
  12:  CALL:          return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  12:  ARG PASS:          return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/model/custom/P.java
  AffectedNodeName: [return value]
  13:  Return Value:          return this.cmd;
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: getCmd
  12:  CALL RETURN:         return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/model/custom/PS.java
  AffectedNodeName: [return value]
  12:  Return Value:          return super.getCmd() + this.cmd2;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
  AffectedNodeName: getCmd
  27:  CALL RETURN:             Runtime.getRuntime().exec(ps.getCmd());
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/override/Expression_Override_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(ps.getCmd());

------------- 157: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
Line 31: Runtime.getRuntime().exec(o)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java","functionName":"returnValuePassing001T","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: __taint_src
  19:  SOURCE:      public static void returnValuePassing001T(@RequestParam String __taint_src) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: process
  20:  CALL:          String data = process(__taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: __taint_src
  24:  ARG PASS:      private static String process(String __taint_src) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: tmp
  25:  Var Pass:          String tmp = __taint_src;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: [return value]
  26:  Return Value:          return tmp;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: process
  20:  CALL RETURN:         String data = process(__taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: data
  20:  Var Pass:          String data = process(__taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: __taint_sink
  21:  CALL:          __taint_sink(data);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: o
  29:  ARG PASS:      private static void __taint_sink(String o) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/return_value_passing/function_return_value_passing_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(o);

------------- 158: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_field_001_T.java
Line 30: Runtime.getRuntime().exec(MyClass.data)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_field_001_T.java","functionName":"static_field_001_T","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_field_001_T.java
  AffectedNodeName: __taint_src
  23:  SOURCE:      public void static_field_001_T(@RequestParam String __taint_src) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_field_001_T.java
  AffectedNodeName: [MyClass.data]
  24:  Var Pass:         MyClass.data = __taint_src;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_field_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(MyClass.data);

------------- 159: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java
Line 20: Runtime.getRuntime().exec(arg)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java","functionName":"static_method_001_T","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java
  AffectedNodeName: __taint_src
  32:  SOURCE:      public void static_method_001_T(@RequestParam String __taint_src) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java
  AffectedNodeName: process
  33:  CALL:          MyClass3.process(__taint_src);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java
  AffectedNodeName: arg
  25:  ARG PASS:      public static void process(String arg) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java
  AffectedNodeName: __taint_sink
  26:  CALL:          __taint_sink(arg); // 传递静态字段到接收点
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java
  AffectedNodeName: arg
  18:  ARG PASS:      private static void __taint_sink(String arg) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/function_call/static_method/static_method_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  20:  SINK:              Runtime.getRuntime().exec(arg);

------------- 160: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_001_T.java
Line 27: Runtime.getRuntime().exec(arr)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_001_T.java
  AffectedNodeName: arr[2]
  26:  Var Pass:             arr[2] = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(arr);

------------- 161: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_002_F.java
Line 27: Runtime.getRuntime().exec(arr)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_002_F.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_002_F.java
  AffectedNodeName: arr[3]
  26:  Var Pass:             arr[3] = cmd; // OutOfBound
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/ArrayOutOfBoundOrNot_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(arr);

------------- 162: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/Array_index_001_T.java
Line 26: Runtime.getRuntime().exec(arr.0)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/Array_index_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/Array_index_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/Array_index_001_T.java
  AffectedNodeName: arr
  25:  Var Pass:              String[] arr = new String[] {cmd, "xx", "bar"};
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/Array_index_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              Runtime.getRuntime().exec(arr[0]);

------------- 163: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_001_T.java
Line 28: Runtime.getRuntime().exec(map.get(key1))
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_001_T.java
  AffectedNodeName: put
  27:  CALL:              map.put("key1", cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(map.get("key1"));

------------- 164: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_003_T.java
Line 29: SinkUtil.sink(map.values())
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_003_T.java
  AffectedNodeName: put
  28:  CALL:              map.put("key1", cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_003_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:              SinkUtil.sink(map.values());

------------- 165: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_005_T.java
Line 29: SinkUtil.sink(map.keySet())
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_005_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_005_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_005_T.java
  AffectedNodeName: put
  28:  CALL:              map.put(cmd, "value1");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_005_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:              SinkUtil.sink(map.keySet());

------------- 166: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_007_T.java
Line 29: SinkUtil.sink(map.entrySet())
SINK RULE:SinkUtil.sink
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_007_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_007_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_007_T.java
  AffectedNodeName: put
  28:  CALL:              map.put("key1", cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapField_007_T.java
  AffectedNodeName: SinkUtil.sink
  29:  SINK:              SinkUtil.sink(map.entrySet());

------------- 167: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
Line 44: httpclient.execute(httpGet)
SINK RULE:execute
SINK Attribute:JavaSSRF
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapPutGet_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapPutGet_001_T.java
  AffectedNodeName: url
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String url) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapPutGet_001_T.java
  AffectedNodeName: put
  28:  CALL:              paramMap.put("url", url);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/object_field_sensitive/field_sensitive_one_collection/numeric_index_state_no_solver/MapPutGet_001_T.java
  AffectedNodeName: doGet
  30:  CALL:              HttpUtil.doGet(paramMap.get("url"));
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  64:  ARG PASS:      public static String doGet(String url) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: doGet
  65:  CALL:          return doGet(url, null);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: url
  22:  ARG PASS:      public static String doGet(String url, Map<String, String> param) throws Exception {
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: builder
  31:  Var Pass:              URIBuilder builder = new URIBuilder(url);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: uri
  37:  Var Pass:              URI uri = builder.build();
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpGet
  40:  Var Pass:              HttpGet httpGet = new HttpGet(uri);
 /src/main/java/com/sast/astbenchmark/common/utils/HttpUtil.java
  AffectedNodeName: httpclient.execute
  44:  SINK:              response = httpclient.execute(httpGet);

------------- 168: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_001_T.java
Line 32: Runtime.getRuntime().exec(exec2)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_001_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_001_T.java
  AffectedNodeName: getCmdWithContextSensitive
  30:  CALL:          exec2 = CmdUtil.getCmdWithContextSensitive(i, cmd);
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  13:  ARG PASS:      public static String getCmdWithContextSensitive(int x, String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: res
  16:  Var Pass:             res = cmd;
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: [return value]
  21:  Return Value:          return res;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_001_T.java
  AffectedNodeName: getCmdWithContextSensitive
  30:  CALL RETURN:         exec2 = CmdUtil.getCmdWithContextSensitive(i, cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_001_T.java
  AffectedNodeName: exec2
  30:  Var Pass:         exec2 = CmdUtil.getCmdWithContextSensitive(i, cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  32:  SINK:              Runtime.getRuntime().exec(exec2);

------------- 169: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_002_F.java
Line 33: Runtime.getRuntime().exec(exec2)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_002_F.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_002_F.java
  AffectedNodeName: getCmdWithContextSensitive
  31:  CALL:          exec2 = CmdUtil.getCmdWithContextSensitive(i, cmd);
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: cmd
  13:  ARG PASS:      public static String getCmdWithContextSensitive(int x, String cmd) {
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: res
  16:  Var Pass:             res = cmd;
 /src/main/java/com/sast/astbenchmark/common/utils/CmdUtil.java
  AffectedNodeName: [return value]
  21:  Return Value:          return res;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_002_F.java
  AffectedNodeName: getCmdWithContextSensitive
  31:  CALL RETURN:         exec2 = CmdUtil.getCmdWithContextSensitive(i, cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_002_F.java
  AffectedNodeName: exec2
  31:  Var Pass:         exec2 = CmdUtil.getCmdWithContextSensitive(i, cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_need_solve/DifferentParamsForFunction_need_solve_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  33:  SINK:              Runtime.getRuntime().exec(exec2);

------------- 170: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java
Line 36: Runtime.getRuntime().exec(rx1.y.f)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java
  AffectedNodeName: cmd
  25:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java
  AffectedNodeName: [y1.f]
  32:  Var Pass:             y1.f = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java
  AffectedNodeName: assign
  34:  CALL:              X rx1 = Invoke.assign(x1, y1);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: y
  142: ARG PASS:      public static X assign(X x, Y y) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [x.y]
  143: Var Pass:         x.y = y;
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  144: Return Value:          return x;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java
  AffectedNodeName: assign
  34:  CALL RETURN:             X rx1 = Invoke.assign(x1, y1);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java
  AffectedNodeName: rx1
  34:  Var Pass:              X rx1 = Invoke.assign(x1, y1);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  36:  SINK:              Runtime.getRuntime().exec(rx1.y.f);

------------- 171: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_003_T.java
Line 29: Runtime.getRuntime().exec(c1)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_003_T.java
  AffectedNodeName: cmd
  24:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_003_T.java
  AffectedNodeName: id
  27:  CALL:              String c1 = Invoke.id(cmd);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  87:  ARG PASS:      public static String id(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: ret
  88:  Var Pass:          String ret = data;
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  89:  Return Value:          return ret;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_003_T.java
  AffectedNodeName: id
  27:  CALL RETURN:             String c1 = Invoke.id(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_003_T.java
  AffectedNodeName: c1
  27:  Var Pass:              String c1 = Invoke.id(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/DifferentParamsForFunction_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(c1);

------------- 172: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java
Line 28: Runtime.getRuntime().exec(c2)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java
  AffectedNodeName: cmd1
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd1) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java
  AffectedNodeName: id8
  26:  CALL:              String c1 = Invoke.id8(cmd1);
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  120: ARG PASS:      public static String id8(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id7
  121: CALL:          return id7(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  116: ARG PASS:      public static String id7(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id6
  117: CALL:          return id6(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  112: ARG PASS:      public static String id6(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id5
  113: CALL:          return id5(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  108: ARG PASS:      public static String id5(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id4
  109: CALL:          return id4(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  104: ARG PASS:      public static String id4(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id3
  105: CALL:          return id3(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  100: ARG PASS:      public static String id3(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id2
  101: CALL:          return id2(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  96:  ARG PASS:      public static String id2(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id1
  97:  CALL:          return id1(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  92:  ARG PASS:      public static String id1(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id
  93:  CALL:          return id(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: data
  87:  ARG PASS:      public static String id(String data) {
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: ret
  88:  Var Pass:          String ret = data;
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  89:  Return Value:          return ret;
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id
  93:  CALL RETURN:         return id(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  93:  Return Value:          return id(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id1
  97:  CALL RETURN:         return id1(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  97:  Return Value:          return id1(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id2
  101: CALL RETURN:         return id2(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  101: Return Value:          return id2(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id3
  105: CALL RETURN:         return id3(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  105: Return Value:          return id3(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id4
  109: CALL RETURN:         return id4(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  109: Return Value:          return id4(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id5
  113: CALL RETURN:         return id5(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  113: Return Value:          return id5(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id6
  117: CALL RETURN:         return id6(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  117: Return Value:          return id6(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: id7
  121: CALL RETURN:         return id7(data + "bar");
 /src/main/java/com/sast/astbenchmark/model/alias/Invoke.java
  AffectedNodeName: [return value]
  121: Return Value:          return id7(data + "bar");
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java
  AffectedNodeName: id8
  26:  CALL RETURN:             String c1 = Invoke.id8(cmd1);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java
  AffectedNodeName: c1
  26:  Var Pass:              String c1 = Invoke.id8(cmd1);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java
  AffectedNodeName: id8
  27:  CALL:              String c2 = Invoke.id8(c1);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/context_sensitive/multi_invoke/multi_invoke_without_solve/MultiCallSite_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:              Runtime.getRuntime().exec(c2);

------------- 173: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_init/Statement_ForStatement_init_001_T.java
Line 28: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_init/Statement_ForStatement_init_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_init/Statement_ForStatement_init_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_init/Statement_ForStatement_init_001_T.java
  AffectedNodeName: a
  27:  Var Pass:             for (a = cmd + "|"; i < 1; i++) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_init/Statement_ForStatement_init_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:                  Runtime.getRuntime().exec(a);

------------- 174: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_update/Statement_ForStatement_update_001_T.java
Line 26: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_update/Statement_ForStatement_update_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_update/Statement_ForStatement_update_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_update/Statement_ForStatement_update_001_T.java
  AffectedNodeName: a
  27:  Var Pass:                 a = cmd + "|";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/flow_sensitive/loop_stmt/loop_stmt_update/Statement_ForStatement_update_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              for (int i = 0; i < 1; Runtime.getRuntime().exec(a)) {

------------- 175: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
Line 27: Runtime.getRuntime().exec(exec)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: getCmdWithPathSensitive
  25:  CALL:          String exec = getCmdWithPathSensitive(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: cmd
  35:  ARG PASS:      private String getCmdWithPathSensitive(String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: [return value]
  38:  Return Value:              return cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: [return value]
  40:  Return Value:              return "ls";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: getCmdWithPathSensitive
  25:  CALL RETURN:         String exec = getCmdWithPathSensitive(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: exec
  25:  Var Pass:          String exec = getCmdWithPathSensitive(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(exec);

------------- 176: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
Line 27: Runtime.getRuntime().exec(exec)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: getCmdWithPathSensitive
  25:  CALL:          String exec = getCmdWithPathSensitive(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: cmd
  35:  ARG PASS:      private String getCmdWithPathSensitive(String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: [return value]
  38:  Return Value:              return cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: [return value]
  40:  Return Value:              return "ls";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: getCmdWithPathSensitive
  25:  CALL RETURN:         String exec = getCmdWithPathSensitive(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: exec
  25:  Var Pass:          String exec = getCmdWithPathSensitive(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/ConstantIfGuard_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  27:  SINK:              Runtime.getRuntime().exec(exec);

------------- 177: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/Statement_ForStatement_no_solver_001_T.java
Line 29: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/Statement_ForStatement_no_solver_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/Statement_ForStatement_no_solver_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/Statement_ForStatement_no_solver_001_T.java
  AffectedNodeName: a
  27:  Var Pass:                 a = cmd + "|";
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/no_solver/Statement_ForStatement_no_solver_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(a);

------------- 178: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_001_T.java
Line 29: Runtime.getRuntime().exec(arr)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_001_T.java
  AffectedNodeName: arr[1]
  27:  Var Pass:                 arr[1] = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(arr);

------------- 179: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_002_F.java
Line 29: Runtime.getRuntime().exec(arr)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_002_F.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_002_F.java
  AffectedNodeName: arr[1]
  27:  Var Pass:                 arr[1] = cmd; // UnReachable
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(arr);

------------- 180: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_003_T.java
Line 30: Runtime.getRuntime().exec(arr2)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_003_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@RequestParam String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_003_T.java
  AffectedNodeName: arr2[1]
  28:  Var Pass:                 arr2[1] = cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/DifferentIfBranch_ArrayLength_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  30:  SINK:              Runtime.getRuntime().exec(arr2);

------------- 181: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_001_T.java
Line 26: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:                  Runtime.getRuntime().exec(cmd);

------------- 182: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_002_F.java
Line 28: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_002_F.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:                  Runtime.getRuntime().exec(cmd);

------------- 183: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_003_T.java
Line 28: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_003_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  28:  SINK:                  Runtime.getRuntime().exec(cmd);

------------- 184: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_004_F.java
Line 26: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_004_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_004_F.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Expression_InstanceofExpression_solver_004_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:                  Runtime.getRuntime().exec(cmd);

------------- 185: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_001_T.java
Line 26: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_001_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              assert a > 0 : Runtime.getRuntime().exec(cmd);

------------- 186: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_003_T.java
Line 26: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_003_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_003_T.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_AssertStatement_solver_003_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  26:  SINK:              assert a > 0 : Runtime.getRuntime().exec(cmd);

------------- 187: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_001_T.java
Line 29: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_001_T.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_001_T.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_001_T.java
  AffectedNodeName: a
  27:  Var Pass:                 a = " " + cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_001_T.java
  AffectedNodeName: Runtime.getRuntime().exec
  29:  SINK:              Runtime.getRuntime().exec(a);

------------- 188: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_002_F.java
Line 31: Runtime.getRuntime().exec(a)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_002_F.java","functionName":"testcase","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_002_F.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> testcase(@PathVariable String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_002_F.java
  AffectedNodeName: a
  28:  Var Pass:                 a = " "+ cmd;
 /src/main/java/com/sast/astbenchmark/case_language_maturity/accuracy/path_sensitive/loop_conditional_stmt/solver/Statement_WhileStatement_solver_002_F.java
  AffectedNodeName: Runtime.getRuntime().exec
  31:  SINK:              Runtime.getRuntime().exec(a);

------------- 189: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_file/cross_file_001_T/cross_file_001_T_b.java
Line 23: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_file/cross_file_001_T/cross_file_001_T_a.java","functionName":"aTaintCase0110","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_file/cross_file_001_T/cross_file_001_T_a.java
  AffectedNodeName: cmd
  22:  SOURCE:      public Map<String, Object> aTaintCase0110(@RequestParam("cmd") String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_file/cross_file_001_T/cross_file_001_T_a.java
  AffectedNodeName: cross_file_001_T_b
  23:  CALL:          return new cross_file_001_T_b().cross_file_001_T_b(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_file/cross_file_001_T/cross_file_001_T_b.java
  AffectedNodeName: cmd
  20:  ARG PASS:      public Map<String, Object> cross_file_001_T_b(String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_file/cross_file_001_T/cross_file_001_T_b.java
  AffectedNodeName: Runtime.getRuntime().exec
  23:  SINK:              Runtime.getRuntime().exec(cmd);

------------- 190: taint_flow_java_input_inner-------------
Description:Java污点分析checker，不会使用CallGraph边界制作entrypoint，蚂蚁内部使用
File:/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_directory/cross_directory_001_T/B/cross_directory_001_T_b.java
Line 23: Runtime.getRuntime().exec(cmd)
SINK RULE:Runtime.getRuntime().exec
SINK Attribute:JavaCommandExec
entrypoint:
{"filePath":"/src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_directory/cross_directory_001_T/A/cross_directory_001_T_a.java","functionName":"aTaintCase0110","attribute":"HTTP","type":"functionCall"}
Trace:
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_directory/cross_directory_001_T/A/cross_directory_001_T_a.java
  AffectedNodeName: cmd
  23:  SOURCE:      public Map<String, Object> aTaintCase0110(@RequestParam("cmd") String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_directory/cross_directory_001_T/A/cross_directory_001_T_a.java
  AffectedNodeName: cross_directory_001_T_b
  24:  CALL:          return new cross_directory_001_T_b().cross_directory_001_T_b(cmd);
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_directory/cross_directory_001_T/B/cross_directory_001_T_b.java
  AffectedNodeName: cmd
  20:  ARG PASS:      public Map<String, Object> cross_directory_001_T_b(String cmd) {
 /src/main/java/com/sast/astbenchmark/case_language_maturity/completeness/single_app_tracing/cross_file_package_namespace/cross_directory/cross_directory_001_T/B/cross_directory_001_T_b.java
  AffectedNodeName: Runtime.getRuntime().exec
  23:  SINK:              Runtime.getRuntime().exec(cmd);
==========================================================
  #Total-findings:190
==========================================================